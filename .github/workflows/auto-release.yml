name: Auto Release

on:
  push:
    branches:
      - "master"

jobs:
  prebuild_macos:
    name: pre build macos version binary
    timeout-minutes: 25
    runs-on: macos-11
    strategy:
      matrix:
        arch:
          - x86_64
          - aarch64
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get target
        id: target
        run: echo 'target=${{ matrix.arch }}-apple-darwin' >> $GITHUB_OUTPUT

      - name: Add target
        run: |
          rustup target add ${{ steps.target.outputs.target }}

      - name: Setup rust toolchain
        run: |
          rustup show

      # If you need to reset the cache version, increment the number after `v`
      - uses: Swatinem/rust-cache@v1
        with:
          sharedKey: pre-release-${{ steps.target.outputs.target }}-v1

      - name: Build
        run: |
          cargo build --features node --no-default-features --release --target ${{ steps.target.outputs.target }}
          zip -j rings-${{ steps.target.outputs.target }}.zip ./target/${{ steps.target.outputs.target }}/release/rings

      - uses: actions/upload-artifact@v3
        name: Upload artifacts
        with:
          name: rings-${{ steps.target.outputs.target }}
          path: rings-${{ steps.target.outputs.target }}.zip
          retention-days: 1

  prebuild_linux:
    name: pre build linux version binary
    timeout-minutes: 25
    runs-on: "ubuntu-latest"
    strategy:
      matrix:
        arch:
          - x86_64
        platform:
          - musl
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get target
        id: target
        run: echo 'target=${{ matrix.arch }}-unknown-linux-${{ matrix.platform }}' >> $GITHUB_OUTPUT

      - name: Add target
        run: |
          rustup target add ${{ steps.target.outputs.target }}

      - name: Setup rust toolchain
        run: |
          rustup show

      - name: Install musl-tools
        if: matrix.platform == 'musl'
        run: |
          set -ex
          sudo apt-get update
          sudo apt-get install -y musl-tools

      # If you need to reset the cache version, increment the number after `v`
      - uses: Swatinem/rust-cache@v1
        with:
          sharedKey: pre-release-${{ steps.target.outputs.target }}-v1

      - name: Build
        run: |
          cargo build --features node --no-default-features --release --target ${{ steps.target.outputs.target }}
          zip -j rings-${{ steps.target.outputs.target }}.zip ./target/${{ steps.target.outputs.target }}/release/rings

      - uses: actions/upload-artifact@v3
        name: Upload artifacts
        with:
          name: rings-${{ steps.target.outputs.target }}
          path: rings-${{ steps.target.outputs.target }}.zip
          retention-days: 1

  release:
    needs: [prebuild_macos, prebuild_linux]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/download-artifact@v2

      - name: Display fetched artifacts
        run: ls -R

      - uses: "marvinpinto/action-automatic-releases@latest"
        name: Emit a Github Release
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: latest
          prerelease: true
          title: "Development Build"
          files: |
            LICENSE
            rings-x86_64-unknown-linux-musl/*.zip
            rings-x86_64-apple-darwin/*.zip
            rings-aarch64-apple-darwin/*.zip
