[package]
name = "rings-core"
version = "0.1.0"
edition = "2021"
authors = ["RND <dev@ringsnetwork.io>"]
description = "Chord DHT implementation with ICE"
repository = "https://github.com/RingsNetwork/rings-node"
license = "GPL-3.0"
readme = "README.md"
keywords = ["Chord", "DHT", "Web3", "P2P", "WASM"]
categories = ["network-programming", "cryptography", "wasm"]
[features]
default = ["webrtc", "bytes", "async-channel"]
wasm = ["web-sys", "wasm-bindgen", "js-sys", "wasm-bindgen-futures"]

[dependencies]
# global
async-trait = "0.1.52"
log = "0.4"
dashmap = "4"
hex = "0.4.3"
num-bigint = "0.3.1"
rand = { version = "0.8.5", features = ["getrandom"] }
rand_core = { version = "0.6.3", features = ["getrandom"] }
rand_hc = "0.3.1"
libsecp256k1 = "0.7.0"
sha1 = "0.10.1"
serde_json = { version = "1.0.70" }
serde = { version = "1.0.130", features = ["derive"] }
futures = { version = "0.3.21" }
chrono = { version = "0.4.19", features = ["wasmbind"] }
base58-monero = { version = "0.3", default-features = false, features = ["check"] }
async-stream = "0.3.2"
async-lock = "2.5.0"
futures-core = "0.3.21"
futures-timer = "3.0.2"
url = { version = "2", features = ["serde"] }
thiserror = "1"
flate2 = { version = "1.0.22" }
async-recursion = "1.0.0"
itertools = "0.10.3"

# default
webrtc = { version = "0.3.3", optional = true }
bytes = { version = "1.1.0", optional = true }
async-channel = { version = "1.6.1", optional = true }

# wasm
wasm-bindgen = { version = "0.2.80", features = ["serde-serialize"], optional = true }
wasm-bindgen-futures = { version = "0.4.30", optional = true }
js-sys = { version = "0.3.56", optional = true }

[dependencies.web-sys]
version = "0.3.56"
optional = true
features = [
  "Window",
  "Navigator",
  "MessageEvent",
  "MediaStreamConstraints",
  "MediaDevices",
  "RtcPeerConnection",
  "RtcSignalingState",
  "RtcSdpType",
  "RtcIceServer",
  "RtcSessionDescriptionInit",
  "RtcSessionDescription",
  "RtcPeerConnectionIceEvent",
  "RtcIceCandidate",
  "RtcIceCandidateInit",
  "RtcDataChannel",
  "RtcDataChannelEvent",
  "RtcDataChannelState",
  "RtcConfiguration",
  "RtcIceConnectionState",
  "RtcIceGatheringState",
  "RtcIceCredentialType",
  "RtcLifecycleEvent",
  "console",
]

[target.'cfg(target_family="wasm")'.dependencies]
web3 = { package = "web3", version = "0.18.0", features = ["wasm"], default-features = false }
futures-util = { package = "futures-util", version = "0.3.21", default-features = false }
uuid = { package = "uuid", version = "0.8.2", features = ["wasm-bindgen", "v4"] }


[target.'cfg(not(target_family="wasm"))'.dependencies]
web3 = { package = "web3", version = "0.18.0" }
futures-util = { package = "futures-util", version = "0.3.21" }
uuid = { package = "uuid", version = "0.8.2", features = ["v4"] }


[dev-dependencies]
wasm-bindgen-test = "0.3.0"
console_log = { version = "0.2" }

[target.'cfg(not(target_family="wasm"))'.dev-dependencies]
tokio = { version = "1.13.0", features = ["full"] }
